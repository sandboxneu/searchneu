generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Course {
  class_attributes String[]
  class_id         String?
  coreqs           Json?
  description      String?
  fee_amount       Int?
  fee_description  String?
  host             String?
  id               String             @id
  last_update_time DateTime?
  max_credits      Int?
  min_credits      Int?
  name             String?
  nupath           String[]
  opt_prereqs_for  Json?
  prereqs          Json?
  prereqs_for      Json?
  pretty_url       String?
  subject          String?
  term_id          String?
  url              String?
  followed_courses followed_courses[]
  sections         sections[]

  @@map(name: "courses")
  @@index([class_id, term_id, subject], name: "unique_course_props")
}

model FollowedCourse {
  course_id String
  user_id   String
  courses   courses @relation(fields: [course_id], references: [id])
  users     users   @relation(fields: [user_id], references: [id])

  @@map(name: "followed_courses")
  @@id([user_id, course_id])
}

model FollowedSection {
  section_id String
  user_id    String
  sections   sections @relation(fields: [section_id], references: [id])
  users      users    @relation(fields: [user_id], references: [id])

  @@map(name: "followed_sections")
  @@id([user_id, section_id])
}

model Major {
  catalog_year   Int?
  id             Int     @default(autoincrement()) @id
  major_id       String?
  name           String?
  plans_of_study Json?
  requirements   Json?

  @@map(name: "majors")
}

model Section {
  class_hash        String?
  class_type        String?
  crn               String?
  honors            Boolean?
  id                String              @id
  info              String?
  meetings          Json?
  online            Boolean?
  profs             String[]
  seats_capacity    Int?
  seats_remaining   Int?
  url               String?
  wait_capacity     Int?
  wait_remaining    Int?
  courses           courses?            @relation(fields: [class_hash], references: [id])
  followed_sections followed_sections[]

  @@map(name: "sections")
}

model User {
  facebook_page_id  String?
  first_name        String?
  id                String              @id
  last_name         String?
  login_keys        String[]
  followed_courses  followed_courses[]
  followed_sections followed_sections[]

  @@map(name: "users")
}
