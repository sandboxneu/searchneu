services:
  - type: web
    name: webserver
    region: oregon
    env: docker
    plan: starter
    envVars:
      - key: elasticURL
        fromService:
          name: elasticsearch
          type: pserv
          property: hostport
      - key: dbHost
        fromDatabase:
          name: postgres
          property: host
      - key: dbName
        fromDatabase:
          name: postgres
          property: database
      - key: dbUsername
        fromDatabase:
          name: postgres
          property: user
      - key: dbPassword
        fromDatabase:
          name: postgres
          property: password
      - fromGroup: secrets
  - type: worker
    name: updater
    region: oregon
    env: node
    buildCommand: yarn install --frozen-lockfile --production=false; yarn build;
    startCommand: yarn prod:start:updater
    envVars:
      - key: elasticURL
        fromService:
          name: elasticsearch
          type: pserv
          property: hostport
      - key: dbHost
        fromDatabase:
          name: postgres
          property: host
      - key: dbName
        fromDatabase:
          name: postgres
          property: database
      - key: dbUsername
        fromDatabase:
          name: postgres
          property: user
      - key: dbPassword
        fromDatabase:
          name: postgres
          property: password
      - fromGroup: secrets
  - type: cron
    name: scrape
    env: docker
    schedule: "0 * * * *"
    # buildCommand: yarn install --frozen-lockfile --production=false; yarn build;
    # startCommand: yarn prod:scrape
    dockerCommand: yarn prod:scrape
    envVars:
      - key: elasticURL
        fromService:
          name: elasticsearch
          type: pserv
          property: hostport
      - key: dbHost
        fromDatabase:
          name: postgres
          property: host
      - key: dbName
        fromDatabase:
          name: postgres
          property: database
      - key: dbUsername
        fromDatabase:
          name: postgres
          property: user
      - key: dbPassword
        fromDatabase:
          name: postgres
          property: password
      - fromGroup: secrets
  - type: pserv
    name: elasticsearch
    env: docker
    plan: standard
    dockerfilePath: ./infrastructure/render/elasticsearch/Dockerfile
    dockerContext: ./infrastructure/render/elasticsearch
    disk:
      name: esdata
      mountPath: /usr/share/elasticsearch/data
      sizeGB: 10
    # autoDeploy: false # so ES does not restart on a push to this repository.
    envVars:
    - key: ES_JAVA_OPTS
      value: "-Xms512m -Xmx512m"
    - key: discovery.type
      value: single-node
    - key: cluster.name
      value: elastic

databases:
  - name: postgres
    region: oregon
    plan: starter

envVarGroups:
- name: secrets
  envVars:
  - key: fbAppSecret
    sync: false
  - key: fbToken
    sync: false
  - key: fbVerifyToken
    sync: false
  - key: rollbarPostServerItemToken
    sync: false